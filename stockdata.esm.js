const t=require("lodash"),a=require("os"),e=require("path"),i=require("fs"),n=i.promises,r=require("pino")({level:process.env.LOGGER||"info",prettyPrint:{levelFirst:!0,translateTime:"SYS:yyyy-mm-dd HH:MM:ss.l",crlf:!0},prettifier:require("pino-pretty")}),o={daily:"daily",info:"info",financial:"fin"};function c(){return e.join(a.homedir(),".wtda")}async function s(){let a=null;try{await y();let i=e.join(c(),"stock-list.json");a=JSON.parse(await n.readFile(i,"utf-8")),t.isEmpty(a)||r.debug("股票列表更新时间 @"+a.updateTime)}catch(t){throw r.error("读取股票列表数据错误："+t),new Error("读取股票列表过程中出现错误，请检查后重新运行："+t)}return t.isEmpty(a)?{updateTime:"",data:[]}:a}async function l(){let a=null;try{await y();let i=e.join(c(),"index-list.json");a=JSON.parse(await n.readFile(i,"utf-8")),t.isEmpty(a)||r.debug("指数列表更新时间 @"+a.updateTime)}catch(t){throw r.error("读取指数列表数据错误："+t),new Error("读取指数列表过程中出现错误，请检查后重新运行："+t)}return t.isEmpty(a)?{updateTime:"",data:[]}:a}const d={daily:"daily",adjustFactor:"adjustFactor",suspendInfo:"suspendInfo",dailyBasic:"dailyBasic",moneyFlow:"moneyFlow",indexDaily:"indexDaily",income:"income",balanceSheet:"balanceSheet",cashFlow:"cashFlow",forecast:"forecast",express:"express",dividend:"dividend",financialIndicator:"financialIndicator",financialMainbiz:"financialMainbiz",disclosureDate:"disclosureDate"},f={daily:{name:"daily",path:o.daily,ext:""},adjustFactor:{name:"adjustFactor",path:o.daily,ext:".adj"},suspendInfo:{name:"suspendInfo",path:o.info,ext:".sus"},dailyBasic:{name:"dailyBasic",path:o.info,ext:".bsc"},moneyFlow:{name:"moneyFlow",path:o.info,ext:".mf"},indexDaily:{name:"indexDaily",path:o.daily,ext:""},income:{name:"income",path:o.financial,ext:".ic"},balanceSheet:{name:"balanceSheet",path:o.financial,ext:".bs"},cashFlow:{name:"cashFlow",path:o.financial,ext:".cf"},forecast:{name:"forecast",path:o.financial,ext:".fc"},express:{name:"express",path:o.financial,ext:".ep"},dividend:{name:"dividend",path:o.financial,ext:".dd"},financialIndicator:{name:"financialIndicator",path:o.financial,ext:".id"},financialMainbiz:{name:"financialMainbiz",path:o.financial,ext:".mb"},disclosureDate:{name:"disclosureDate",path:o.financial,ext:".dt"}};async function h(a,e){if(!d[a])throw new Error("不支持的数据类型："+a);if(t.isEmpty(e))throw new Error("未设置读取股票代码");let i={updateTime:null,data:[]};try{await y();let t=u(a,e);try{i=JSON.parse(await n.readFile(t,"utf-8"))}catch(t){i={data:[]}}}catch(t){r.error(`从本地读取个股数据${a}时发生错误 ${t}`)}return i}async function u(a,i){let n=f[a];if(!n)throw new Error("不支持的数据类型"+a);if(t.isEmpty(i))throw new Error("未设置读取股票代码");return e.join(c(),n.path,i+n.ext+".json")}async function y(){let t=c();try{await n.access(t,i.constants.F_OK|i.constants.R_OK|i.constants.W_OK)}catch(a){r.debug("检查数据根目录错误 "+a),await n.mkdir(t,{recursive:!0})}for(let a of Object.keys(o)){let c=e.join(t,o[a]);try{await n.access(c,i.constants.F_OK|i.constants.R_OK|i.constants.W_OK)}catch(t){r.debug(`检查目录${o[a]}错误 ${t}`),await n.mkdir(c,{recursive:!0})}}}y();const w=require("lodash"),p=require("moment"),m=require("@wt/lib-taskqueue"),g=require("@wt/lib-tushare"),$=require("pino")({level:process.env.LOGGER||"info",prettyPrint:{levelFirst:!0,translateTime:"SYS:yyyy-mm-dd HH:MM:ss.l",crlf:!0},prettifier:require("pino-pretty")}),b=require("path"),x=require("fs"),F=x.promises;async function j(t,a,e=!1){if(w.isEmpty(t)||!d[t])throw Error("请填写正确的个股数据名称！"+t);if(w.isEmpty(a))return{data:[]};let i;try{if(e){$.debug("需要强制更新数据："+a);try{let[e,n,r]=await g.queryStockInfo(t,a);i={updateTime:p().toISOString(),startDate:r,endDate:n,data:e},$.info(`个股数据${t}强制更新，代码 ${a}, 更新时间：${i.updateTime}, 更新时间范围: ${r} - ${n}, 总条数：${i.data&&i.data.length}`)}catch(e){throw $.error(`强制更新个股${a}数据${t}时出现错误：${e}`),e}}else{i=await h(t,a);let e="";if(i.data&&i.data.length>0){let t=i.endDate;e=p(t,"YYYYMMDD").add(1,"days").format("YYYYMMDD");let n=p();if(n.diff(e,"days")<=0&&n.hours()<15)return void $.log("没有新的数据，不需要更新 "+a)}let[n,r,o]=await g.queryStockInfo(t,a,e);i&&!i.startDate&&(i.startDate=o),n&&n.length>0?(i.updateTime=p().toISOString(),i.endDate=r,i.data.unshift(...n),$.info(`个股数据${t}更新，代码 ${a}, 更新时间：${i.updateTime}, 更新时间范围: ${o} - ${r}, 更新条数：${n&&n.length}，总条数：${i.data&&i.data.length}`)):(i=null,$.info(`个股数据${t}没有更新，代码 ${a}`))}}catch(e){throw $.error(`${a} 个股数据${t}更新时发生错误，${e}`),e}try{if(i&&i.data&&i.data.length>0){let e=JSON.stringify(i),n=await u(t,a);$.debug(`保存个股${a}数据${t}到：${n}`),await F.writeFile(n,e,"utf-8")}}catch(e){throw new Error(`保存个股${a}数据${t}时出现错误，请检查后重新执行：${e}`)}}async function E(t=!1,a=!1,e=!1,i=!1,n=!1){$.debug(`参数：强制更新 ${t}, 更新股票信息数据 ${a}, 更新股票财务数据 ${e}, 更新指数数据 ${n}`);let[r,o]=await async function(t){let a=p();$.info("获取和更新股票列表数据 ...");let e=await g.stockBasic(),i={updateTime:a.toISOString(),data:e};await D(i,"stock-list.json"),$.info("股票列表数据更新完毕！"),$.info("获取和更新指数列表数据 ...");let n={updateTime:a.toISOString(),data:[]},r=await Promise.all(g.indexMarketList.map(async t=>g.indexBasic(t.code)));r&&r.length>0&&r.forEach(t=>{if(t&&t.length>0){let a=t.length,e=(t=t.filter(t=>w.isEmpty(t.exp_date))).length;$.debug(`指数过滤，总共${a}, 剩余${e}`),n.data.push(...t)}});return await D(n,"index-list.json"),$.info("更新指数列表数据完成！"),[i,n]}();a&&await async function(t,a){let e=t&&t.data;if(e&&e.length>0){let t=[];$.info("个股信息数据更新准备...");for(let i=0;i<e.length;i++)for(let n=0;n<S.length;n++)t.push({caller:j,args:[S[n],e[i].ts_code,a]});if($.info("个股信息数据更新准备完毕！"),t&&t.length>0){let a=m(t,30,"个股数据更新任务");try{$.debug("等待个股数据更新队列完成..."),await Promise.all(a),$.info(g.showInfo()),$.debug("个股数据更新队列全部执行完毕！")}catch(t){$.error("个股数据更新任务执行 错误！"+t)}}}}(r,t),e&&await async function(t,a){let e=t&&t.data;if(e&&e.length>0){let t=[];$.info("个股财务数据更新准备...");for(let i=0;i<e.length;i++)for(let n=0;n<O.length;n++)t.push({caller:j,args:[O[n],e[i].ts_code,a]});if($.info("个股财务数据更新准备完毕！"),t&&t.length>0){let a=m(t,30,"个股财务数据任务");try{$.debug("等待个股财务数据更新队列完成..."),await Promise.all(a),$.info(g.showInfo()),$.debug("个股财务数据更新队列全部执行完毕！")}catch(t){$.error("个股财务数据更新任务执行 错误！"+t)}}}}(r,t),i&&await async function(t,a){let e=t&&t.data;if(e&&e.length>0){let t=[];$.info("个股主营业务数据更新准备...");for(let i=0;i<e.length;i++)t.push({caller:j,args:[d.financialMainbiz,e[i].ts_code,a]});if($.info("个股主营业务数据更新准备完毕！"),t&&t.length>0){let a=m(t,30,"个股主营业务数据任务");try{$.debug("等待个股主营业务数据更新队列完成..."),await Promise.all(a),$.info(g.showInfo()),$.debug("个股主营业务数据更新队列全部执行完毕！")}catch(t){$.error("个股主营业务数据更新任务执行 错误！"+t)}}}}(r,t),n&&await async function(t,a){if(t&&t.data&&t.data.length>0){$.info("指数日线数据更新开始 ...");let e=t.data.map(t=>({caller:j,args:[d.indexDaily,t.ts_code,a]})),i=m(e,20,"指数日线更新任务");try{$.debug("等待指数日线更新队列完成 ..."),await Promise.all(i),$.debug("指数日线数据更新队列全部完成！")}catch(t){$.error("指数日线任务执行 错误：%o",t)}$.info(g.showInfo()),$.info("指数日线数据更新完毕！")}}(o,t)}const S=[d.daily,d.adjustFactor,d.suspendInfo,d.dailyBasic,d.moneyFlow],O=[d.income,d.balanceSheet,d.cashFlow,d.forecast,d.express,d.dividend,d.financialIndicator,d.disclosureDate];async function D(t,a){try{let e=JSON.stringify(t),i=b.join(c(),a);await F.writeFile(i,e,{encoding:"utf-8"})}catch(t){throw new Error("保存列表数据时出现错误，请检查后重新执行："+t)}}async function I(){try{$.debug("检查根目录状态："),$.info("清理股票列表数据...");let t=b.join(c(),"stock-list.json");try{await F.access(t,x.constants.F_OK);try{await F.unlink(t)}catch(t){throw t}}catch(t){}$.info("清理股票列表数据完成"),$.info("清理指数列表数据...");let a=b.join(c(),"index-list.json");try{await F.access(a,x.constants.F_OK);try{await F.unlink(a)}catch(t){throw t}}catch(t){}$.info("清理指数列表数据完成"),$.info("清理股票历史数据...");let e=b.join(c(),o.daily);try{await F.access(e,x.constants.F_OK);try{let t=await F.readdir(e);$.info(`共有${t.length}个历史数据文件待删除`),t.forEach(async t=>{await F.unlink(b.join(e,t))})}catch(t){throw t}}catch(t){}$.info("清理股票历史数据完成"),$.info("清理股票信息数据...");let i=b.join(c(),o.info);try{await F.access(i,x.constants.F_OK);try{let t=await F.readdir(i);$.info(`共有${t.length}个历史数据文件待删除`),t.forEach(async t=>{await F.unlink(b.join(i,t))})}catch(t){throw t}}catch(t){}$.info("清理股票信息数据完成"),$.info("清理股票财务数据...");let n=b.join(c(),o.financial);try{await F.access(n,x.constants.F_OK);try{let t=await F.readdir(n);$.info(`共有${t.length}个历史数据文件待删除`),t.forEach(async t=>{await F.unlink(b.join(n,t))})}catch(t){throw t}}catch(t){}$.info("清理股票财务数据完成")}catch(t){throw new Error("清除所有已经同步数据发生错误："+t)}}export{I as clearAllData,h as readStockData,l as readStockIndexList,s as readStockList,d as stockDataNames,E as updateData,j as updateStockInfoData};
