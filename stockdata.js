!function(t,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports):"function"==typeof define&&define.amd?define(["exports"],a):a((t=t||self)["@wt/lib-wtda"]={})}(this,(function(t){"use strict";const a=require("lodash"),e=require("os"),i=require("path"),n=require("fs"),r=n.promises,o=require("pino")({level:process.env.LOGGER||"info",prettyPrint:{levelFirst:!0,translateTime:"SYS:yyyy-mm-dd HH:MM:ss.l",crlf:!0},prettifier:require("pino-pretty")}),c={daily:"daily",info:"info",financial:"fin"};function s(){return i.join(e.homedir(),".wtda")}const l={daily:"daily",adjustFactor:"adjustFactor",suspendInfo:"suspendInfo",dailyBasic:"dailyBasic",moneyFlow:"moneyFlow",indexDaily:"indexDaily",income:"income",balanceSheet:"balanceSheet",cashFlow:"cashFlow",forecast:"forecast",express:"express",dividend:"dividend",financialIndicator:"financialIndicator",financialMainbiz:"financialMainbiz",disclosureDate:"disclosureDate"},d={daily:{name:"daily",path:c.daily,ext:""},adjustFactor:{name:"adjustFactor",path:c.daily,ext:".adj"},suspendInfo:{name:"suspendInfo",path:c.info,ext:".sus"},dailyBasic:{name:"dailyBasic",path:c.info,ext:".bsc"},moneyFlow:{name:"moneyFlow",path:c.info,ext:".mf"},indexDaily:{name:"indexDaily",path:c.daily,ext:""},income:{name:"income",path:c.financial,ext:".ic"},balanceSheet:{name:"balanceSheet",path:c.financial,ext:".bs"},cashFlow:{name:"cashFlow",path:c.financial,ext:".cf"},forecast:{name:"forecast",path:c.financial,ext:".fc"},express:{name:"express",path:c.financial,ext:".ep"},dividend:{name:"dividend",path:c.financial,ext:".dd"},financialIndicator:{name:"financialIndicator",path:c.financial,ext:".id"},financialMainbiz:{name:"financialMainbiz",path:c.financial,ext:".mb"},disclosureDate:{name:"disclosureDate",path:c.financial,ext:".dt"}};async function f(t,e){if(!l[t])throw new Error("不支持的数据类型："+t);if(a.isEmpty(e))throw new Error("未设置读取股票代码");let i={updateTime:null,data:[]};try{await h();let a=u(t,e);try{i=JSON.parse(await r.readFile(a,"utf-8"))}catch(t){i={data:[]}}}catch(a){o.error(`从本地读取个股数据${t}时发生错误 ${a}`)}return i}async function u(t,e){let n=d[t];if(!n)throw new Error("不支持的数据类型"+t);if(a.isEmpty(e))throw new Error("未设置读取股票代码");return i.join(s(),n.path,e+n.ext+".json")}async function h(){let t=s();try{await r.access(t,n.constants.F_OK|n.constants.R_OK|n.constants.W_OK)}catch(a){o.debug("检查数据根目录错误 "+a),await r.mkdir(t,{recursive:!0})}for(let a of Object.keys(c)){let e=i.join(t,c[a]);try{await r.access(e,n.constants.F_OK|n.constants.R_OK|n.constants.W_OK)}catch(t){o.debug(`检查目录${c[a]}错误 ${t}`),await r.mkdir(e,{recursive:!0})}}}h();const y=require("lodash"),w=require("moment"),p=require("@wt/lib-taskqueue"),m=require("@wt/lib-tushare"),g=require("pino")({level:process.env.LOGGER||"info",prettyPrint:{levelFirst:!0,translateTime:"SYS:yyyy-mm-dd HH:MM:ss.l",crlf:!0},prettifier:require("pino-pretty")}),$=require("path"),b=require("fs"),x=b.promises;async function j(t,a,e=!1){if(y.isEmpty(t)||!l[t])throw Error("请填写正确的个股数据名称！"+t);if(y.isEmpty(a))return{data:[]};let i;try{if(e){g.debug("需要强制更新数据："+a);try{let[e,n,r]=await m.queryStockInfo(t,a);i={updateTime:w().toISOString(),startDate:r,endDate:n,data:e},g.info(`个股数据${t}强制更新，代码 ${a}, 更新时间：${i.updateTime}, 更新时间范围: ${r} - ${n}, 总条数：${i.data&&i.data.length}`)}catch(e){throw g.error(`强制更新个股${a}数据${t}时出现错误：${e}`),e}}else{i=await f(t,a);let e="";if(i.data&&i.data.length>0){let t=i.endDate;e=w(t,"YYYYMMDD").add(1,"days").format("YYYYMMDD");let n=w();if(n.diff(e,"days")<=0&&n.hours()<15)return void g.log("没有新的数据，不需要更新 "+a)}let[n,r,o]=await m.queryStockInfo(t,a,e);i&&!i.startDate&&(i.startDate=o),n&&n.length>0?(i.updateTime=w().toISOString(),i.endDate=r,i.data.unshift(...n),g.info(`个股数据${t}更新，代码 ${a}, 更新时间：${i.updateTime}, 更新时间范围: ${o} - ${r}, 更新条数：${n&&n.length}，总条数：${i.data&&i.data.length}`)):(i=null,g.info(`个股数据${t}没有更新，代码 ${a}`))}}catch(e){throw g.error(`${a} 个股数据${t}更新时发生错误，${e}`),e}try{if(i&&i.data&&i.data.length>0){let e=JSON.stringify(i),n=await u(t,a);g.debug(`保存个股${a}数据${t}到：${n}`),await x.writeFile(n,e,"utf-8")}}catch(e){throw new Error(`保存个股${a}数据${t}时出现错误，请检查后重新执行：${e}`)}}const F=[l.daily,l.adjustFactor,l.suspendInfo,l.dailyBasic,l.moneyFlow],S=[l.income,l.balanceSheet,l.cashFlow,l.forecast,l.express,l.dividend,l.financialIndicator,l.disclosureDate];async function D(t,a){try{let e=JSON.stringify(t),i=$.join(s(),a);await x.writeFile(i,e,{encoding:"utf-8"})}catch(t){throw new Error("保存列表数据时出现错误，请检查后重新执行："+t)}}t.clearAllData=async function(){try{g.debug("检查根目录状态："),g.info("清理股票列表数据...");let t=$.join(s(),"stock-list.json");try{await x.access(t,b.constants.F_OK);try{await x.unlink(t)}catch(t){throw t}}catch(t){}g.info("清理股票列表数据完成"),g.info("清理指数列表数据...");let a=$.join(s(),"index-list.json");try{await x.access(a,b.constants.F_OK);try{await x.unlink(a)}catch(t){throw t}}catch(t){}g.info("清理指数列表数据完成"),g.info("清理股票历史数据...");let e=$.join(s(),c.daily);try{await x.access(e,b.constants.F_OK);try{let t=await x.readdir(e);g.info(`共有${t.length}个历史数据文件待删除`),t.forEach(async t=>{await x.unlink($.join(e,t))})}catch(t){throw t}}catch(t){}g.info("清理股票历史数据完成"),g.info("清理股票信息数据...");let i=$.join(s(),c.info);try{await x.access(i,b.constants.F_OK);try{let t=await x.readdir(i);g.info(`共有${t.length}个历史数据文件待删除`),t.forEach(async t=>{await x.unlink($.join(i,t))})}catch(t){throw t}}catch(t){}g.info("清理股票信息数据完成"),g.info("清理股票财务数据...");let n=$.join(s(),c.financial);try{await x.access(n,b.constants.F_OK);try{let t=await x.readdir(n);g.info(`共有${t.length}个历史数据文件待删除`),t.forEach(async t=>{await x.unlink($.join(n,t))})}catch(t){throw t}}catch(t){}g.info("清理股票财务数据完成")}catch(t){throw new Error("清除所有已经同步数据发生错误："+t)}},t.readStockData=f,t.readStockIndexList=async function(){let t=null;try{await h();let e=i.join(s(),"index-list.json");t=JSON.parse(await r.readFile(e,"utf-8")),a.isEmpty(t)||o.debug("指数列表更新时间 @"+t.updateTime)}catch(t){throw o.error("读取指数列表数据错误："+t),new Error("读取指数列表过程中出现错误，请检查后重新运行："+t)}return a.isEmpty(t)?{updateTime:"",data:[]}:t},t.readStockList=async function(){let t=null;try{await h();let e=i.join(s(),"stock-list.json");t=JSON.parse(await r.readFile(e,"utf-8")),a.isEmpty(t)||o.debug("股票列表更新时间 @"+t.updateTime)}catch(t){throw o.error("读取股票列表数据错误："+t),new Error("读取股票列表过程中出现错误，请检查后重新运行："+t)}return a.isEmpty(t)?{updateTime:"",data:[]}:t},t.stockDataNames=l,t.updateData=async function(t=!1,a=!1,e=!1,i=!1,n=!1){g.debug(`参数：强制更新 ${t}, 更新股票信息数据 ${a}, 更新股票财务数据 ${e}, 更新指数数据 ${n}`);let[r,o]=await async function(t){let a=w();g.info("获取和更新股票列表数据 ...");let e=await m.stockBasic(),i={updateTime:a.toISOString(),data:e};await D(i,"stock-list.json"),g.info("股票列表数据更新完毕！"),g.info("获取和更新指数列表数据 ...");let n={updateTime:a.toISOString(),data:[]},r=await Promise.all(m.indexMarketList.map(async t=>m.indexBasic(t.code)));r&&r.length>0&&r.forEach(t=>{if(t&&t.length>0){let a=t.length,e=(t=t.filter(t=>y.isEmpty(t.exp_date))).length;g.debug(`指数过滤，总共${a}, 剩余${e}`),n.data.push(...t)}});return await D(n,"index-list.json"),g.info("更新指数列表数据完成！"),[i,n]}();a&&await async function(t,a){let e=t&&t.data;if(e&&e.length>0){let t=[];g.info("个股信息数据更新准备...");for(let i=0;i<e.length;i++)for(let n=0;n<F.length;n++)t.push({caller:j,args:[F[n],e[i].ts_code,a]});if(g.info("个股信息数据更新准备完毕！"),t&&t.length>0){let a=p(t,30,"个股数据更新任务");try{g.debug("等待个股数据更新队列完成..."),await Promise.all(a),g.info(m.showInfo()),g.debug("个股数据更新队列全部执行完毕！")}catch(t){g.error("个股数据更新任务执行 错误！"+t)}}}}(r,t),e&&await async function(t,a){let e=t&&t.data;if(e&&e.length>0){let t=[];g.info("个股财务数据更新准备...");for(let i=0;i<e.length;i++)for(let n=0;n<S.length;n++)t.push({caller:j,args:[S[n],e[i].ts_code,a]});if(g.info("个股财务数据更新准备完毕！"),t&&t.length>0){let a=p(t,30,"个股财务数据任务");try{g.debug("等待个股财务数据更新队列完成..."),await Promise.all(a),g.info(m.showInfo()),g.debug("个股财务数据更新队列全部执行完毕！")}catch(t){g.error("个股财务数据更新任务执行 错误！"+t)}}}}(r,t),i&&await async function(t,a){let e=t&&t.data;if(e&&e.length>0){let t=[];g.info("个股主营业务数据更新准备...");for(let i=0;i<e.length;i++)t.push({caller:j,args:[l.financialMainbiz,e[i].ts_code,a]});if(g.info("个股主营业务数据更新准备完毕！"),t&&t.length>0){let a=p(t,30,"个股主营业务数据任务");try{g.debug("等待个股主营业务数据更新队列完成..."),await Promise.all(a),g.info(m.showInfo()),g.debug("个股主营业务数据更新队列全部执行完毕！")}catch(t){g.error("个股主营业务数据更新任务执行 错误！"+t)}}}}(r,t),n&&await async function(t,a){if(t&&t.data&&t.data.length>0){g.info("指数日线数据更新开始 ...");let e=t.data.map(t=>({caller:j,args:[l.indexDaily,t.ts_code,a]})),i=p(e,20,"指数日线更新任务");try{g.debug("等待指数日线更新队列完成 ..."),await Promise.all(i),g.debug("指数日线数据更新队列全部完成！")}catch(t){g.error("指数日线任务执行 错误：%o",t)}g.info(m.showInfo()),g.info("指数日线数据更新完毕！")}}(o,t)},t.updateStockInfoData=j,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=stockdata.js.map
